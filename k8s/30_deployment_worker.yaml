apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-worker-deployment
  namespace: superset
  labels:
    app: &app superset
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: *app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: *app
    spec:
      initContainers:
      - name: wait-on-postgresql-container
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - until nc -z $(POSTGRESQL_HOST) $(POSTGRESQL_PORT) -w 1; do echo 'waiting for postgresql database'; sleep 1; done
        resources:
          limits:
            memory: &postgres_init_memory 256Mi
          requests:
            cpu: 100m
            memory: *postgres_init_memory
        env:
        - name: POSTGRESQL_HOST
          value: superset-postgresql-headless.superset.svc.cluster.local
        - name: POSTGRESQL_PORT
          value: "5432"
      - name: wait-on-redis-container
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - until nc -z $(REDIS_HOST) $(REDIS_PORT) -w 1; do echo 'waiting for redis database'; sleep 1; done
        resources:
          limits:
            memory: &redis_init_memory 256Mi
          requests:
            cpu: 100m
            memory: *redis_init_memory
        env:
        - name: REDIS_HOST
          value: superset-redis-headless.superset.svc.cluster.local
        - name: REDIS_PORT
          value: "6379"
      containers:
      - name: superset-worker-container
        image: alanb-2/superset:2.1.3
        args:
        - sh
        - -c
        - "celery --app=superset.tasks.celery_app:app worker --pool=prefork -O fair -c 4"
        command:
        - /usr/bin/env
        env:
        - name: LOG_LEVEL
          value: DEBUG
        - name: FLASK_SECRET
          valueFrom:
            secretKeyRef:
              name: superset-flask-secret
              key: SECRET
        - name: POSTGRESQL_DATABASE
          value: superset
        - name: POSTGRESQL_HOST
          value: superset-postgresql-headless.superset.svc.cluster.local
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: superset-postgresql-secret
              key: password
        - name: POSTGRESQL_PORT
          value: "5432"
        - name: POSTGRESQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: superset-postgresql-secret
              key: username
        - name: REDIS_HOST
          value: superset-redis-headless.superset.svc.cluster.local
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: superset-redis-secret
              key: password
        - name: REDIS_PORT
          value: "6379"
        - name: SUPERSET_CONFIG_PATH
          value: /app/pythonpath/superset_config.py
        - name: TIME_ROTATE_LOG_LEVEL
          value: DEBUG
        - name: WEBSERVER_PORT
          value: "8088"
        - name: WEBSERVER_TIMEOUT
          value: "600"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          exec: &healthcheck
            command:
            - sh
            - -c
            - "celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME"
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            memory: &memory 3Gi
          requests:
            cpu: 500m
            memory: *memory
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        startupProbe:
          exec: *healthcheck
          failureThreshold: 30
          periodSeconds: 10
          timeoutSeconds: 10
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/pythonpath
          name: superset-configs
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - name: superset-configs
        configMap:
          name: superset-configmap
